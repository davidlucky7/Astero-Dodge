import pygame
import random
import time
pygame.init()
pygame.font.init()
WIDTH, HEIGHT = 900,600
SCORE = 0
SPAWN_TIME = 0
LEVEL = 1
clock= pygame.time.Clock()
freeze_time = 0
LIST = [30,25,20,15,12.5,10,7.5,5]
S_LIST = [50,100,150,200,250,300,350]
NUM = 0


# Player 
P_WIDTH,P_HEIGHT = 100,90
VEL = 10
PLAYER_X = WIDTH//2 - P_WIDTH//2
PLAYER_Y = HEIGHT -100

# Block
A_WIDTH = 70
A_HEIGHT = 70
BLOCKS = []
GAME_OVER = False
def spawn():
    x = random.randint(0, WIDTH - A_WIDTH)
    y = -A_HEIGHT
    A_VEL = random.randint(4,15)
    BLOCKS.append([x,y,A_VEL])
    


def movement():
    global GAME_OVER
    global SCORE,LEVEL
    for BLOCK in BLOCKS[:]:
        BLOCK[1]+=BLOCK[2]
        if BLOCK[1] > HEIGHT-80:
            SCORE +=1
            BLOCKS.remove(BLOCK)
            

            
# Function for checking collision
def collision():
    global GAME_OVER
    global freeze_time
    global BLOCKS
    P_RECT = pygame.Rect(PLAYER_X +20 ,PLAYER_Y+10,P_WIDTH-40,P_HEIGHT-20)
    for BLOCK in BLOCKS:
        A_RECT = pygame.Rect(BLOCK[0]+10, BLOCK[1]+10,A_WIDTH-20,A_HEIGHT-20)
        if P_RECT.colliderect(A_RECT):
            freeze_time = 2
            GAME_OVER = True
        
# Function when block hits the player
def game_over():
    if GAME_OVER:
        FONT =pygame.font.SysFont( 'Highway Gothic',80 ) 
        TEXT = FONT.render('GAME OVER', True,(255, 255, 255))
        RESTART_TEXT = pygame.font.SysFont('Highway Gothic', 40)
        TEXT_RE = RESTART_TEXT.render('Press ENTER to Restart', True, (255, 255, 255))
        GAME.blit(TEXT, (WIDTH//2- TEXT.get_width()//2, HEIGHT//2 - TEXT.get_height()//2))
        GAME.blit(TEXT_RE, (WIDTH//2 -TEXT_RE.get_width()//2, HEIGHT//2 + TEXT.get_height() // 2))
        pygame.display.update()
      
        
# Function for levels

def levels ():
    global SCORE,LEVEL,NUM
    if SCORE>=S_LIST[NUM] :
                LEVEL += 1
                NUM+=1

# Function for bullets
B_COUNT = 30
BULLETS = []
B_WIDTH = 50
B_HEIGHT = 50
B_VEL = 12
def fire_bullet():
    global B_COUNT
    if len(BULLETS) < 1:
        B_COUNT-=1
        B_X = PLAYER_X + P_WIDTH // 2  - 15
        B_Y = PLAYER_Y  
        BULLETS.append([B_X, B_Y])
def update_bullet():
    global BULLETS
    for BULLET in BULLETS[:]:
        BULLET[1]-= B_VEL
        if BULLET[1]<0:
            BULLETS.remove(BULLET)
        else:
            for BLOCK in BLOCKS[:]:
                B_RECT = pygame.Rect(BULLET[0], BULLET[1], B_WIDTH, B_HEIGHT)
                A_RECT = pygame.Rect(BLOCK[0]+10, BLOCK[1]+10,A_WIDTH-20,A_HEIGHT-20)
                if A_RECT.colliderect(B_RECT):
                    BLOCKS.remove(BLOCK)
                    BULLETS.remove(BULLET)
                    break
# Import 
pygame.display.set_caption("Spaceship Game")
GAME = pygame.display.set_mode((WIDTH, HEIGHT))
SPACE = pygame.transform.scale(pygame.image.load('spacexf.webp'),(WIDTH,HEIGHT))
PLAYER = pygame.transform.scale(pygame.image.load('ship21.png'), (P_WIDTH, P_HEIGHT))
BLOCK_IMG = pygame.transform.scale(pygame.image.load('rock.png'),(A_WIDTH,A_HEIGHT))
BULLET_IMG = pygame.transform.scale(pygame.image.load('bull.png'), (30,30))
pygame.display.update()

# While Running
clicks = 0
RUNNING = True
while RUNNING:
    clock.tick(60)
    GAME.blit(SPACE,(0,0))
    S_FONT = pygame.font.SysFont('Highway Gothic',40)
    SCORE_DISPLAY = S_FONT.render(f"Score: {SCORE}", True, (0,255,255))
    L_FONT = pygame.font.SysFont('Highway Gothic',40)
    LEVEL_DISPLAY = S_FONT.render(f"Level: {LEVEL}", True, (255,255,255))
    GAME.blit(SCORE_DISPLAY, (30,70))
    GAME.blit(LEVEL_DISPLAY,(30, 30))
    B_FONT = pygame.font.SysFont('Highway Gothic',40)
    BULLET_DISPLAY = B_FONT.render(f"Bullets: {B_COUNT}", True, (255,255,255))
    GAME.blit(BULLET_DISPLAY, (30, 110))

    for BLOCK in BLOCKS:
        GAME.blit(BLOCK_IMG, (BLOCK[0], BLOCK[1]))
    for BULLET in BULLETS:
        GAME.blit(BULLET_IMG, (BULLET[0], BULLET[1]))
    if GAME_OVER:
        game_over()
        keys = pygame.key.get_pressed()
        if keys[pygame.K_RETURN] :
            NUM = 0
            freeze_time = 0 
            SCORE = 0
            LEVEL = 1
            B_COUNT = 30
            GAME_OVER = False
            BLOCKS.clear()
            BULLETS.clear()
            PLAYER_X = WIDTH//2 - P_WIDTH//2
            PLAYER_Y = HEIGHT -100
            SPAWN_TIME =0
        if freeze_time > 0:
            time.sleep(freeze_time)
    else:
        GAME.blit(PLAYER, (PLAYER_X, PLAYER_Y))
        SPAWN_TIME +=1
        if SPAWN_TIME>LIST[NUM]:
            spawn()
            SPAWN_TIME=0
 
    movement()
    levels()
    collision()
    update_bullet()
    pygame.display.update()
    
    keys = pygame.key.get_pressed()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            RUNNING = False
    if keys[pygame.K_LEFT] and PLAYER_X - VEL > 0:
        PLAYER_X -=VEL
    if keys[pygame.K_RIGHT] and PLAYER_X < WIDTH - P_WIDTH:
        PLAYER_X += VEL
    if keys[pygame.K_UP] and B_COUNT>0:
        fire_bullet()
        
pygame.quit() 
    
